#!/usr/bin/env node

// modules
var program = require('commander');
var sh = require("execSync");
var clc = require('cli-color');
var fs = require('fs');

// options and arguments
program
  .version('0.0.1')
  .option('-d, --date <type>', 'Add podcast date YYYY-MM-DD')
  .option('-n, --num <type>', 'Add episode number NNN')
  .option('-e, --episode_lowercase <type>', 'Add episode name in lowercase E.g. virtualbox')
  .option('-E, --episode <type>', 'Add episode name E.g. VirtualBox')
  .parse(process.argv);

// project specific variables
var config = {
  directory: '/Users/sayanee/Sites/build-podcast/',
  shownotesDir: 'shownotes/',
  templateDir: 'templates/',
  postsDir: '_posts/',
  templatePost: 'post.md',
  readme: 'readme.md',
  app: {
    tower: '/Applications/Tower.app'
  }
}

if (program.date && program.num && program.episode_lowercase && program.episode) {

  // ------------ Announce which episode ------------ //
  console.log('\nYou have started a new Build Podcast episode:');
  console.log('%s %s to be published on %s', program.num, program.episode, program.date + '\n');

  // create demo folder and readme.md inside it
  sh.run('cd ' + config.directory + config.shownotesDir + '&& git checkout master;');
  sh.run('mkdir ' + program.num + '-' + program.episode_lowercase);
  sh.run('cd ' + program.num + '-' + program.episode_lowercase);
  console.log('Demo directory created');

  var newReadme = config.directory + config.shownotesDir + program.num + '-' + program.episode_lowercase + '/' + config.readme;
  sh.run('cp ' + config.directory + config.templateDir + config.readme + ' ' + newReadme);
  console.log('Readme.md created from template');

  fs.readFile(newReadme, 'utf8', function(err, data) {

    if (err) {return console.log(err); }

    data = data.replace(/{{NUM}}/g, program.num);
    data = data.replace(/{{EPISODE}}/g, program.episode);
    data = data.replace(/{{EPISODE_LOWERCASE}}/g, program.episode_lowercase);

    fs.writeFile(newReadme, data, 'utf8', function(err) {
      if (err) throw err;
      console.log(clc.red('Demo folder and readme.md created'));
    });

  });

  // ------------ Copy template and replace placeholders ------------ //
  var template = config.directory + config.templateDir + config.templatePost;
  var newFileName = program.date + '-' + program.episode_lowercase + '.md';
  sh.run('cp ' + template + ' ' + newFileName);

  // ------------ Copy to final destination and delete temp file ------------ //
  fs.readFile(newFileName, 'utf8', function(err, data) {

    if (err) {return console.log(err); }

    data = data.replace(/{{NUM}}/g, program.num);
    data = data.replace(/{{EPISODE}}/g, program.episode);
    data = data.replace(/{{EPISODE_LOWERCASE}}/g, program.episode_lowercase);

    fs.writeFile(newFileName, data, 'utf8', function(err) {
      if (err) throw err;
      sh.run('cp ' + newFileName + ' ' + config.directory + config.shownotesDir + config.postsDir + '; rm ' + newFileName);
      var lastAlphabeticalFile = sh.exec('cd ' + config.directory + config.shownotesDir + config.postsDir + '; ls | tail -n 1');
      sh.run('open ' + config.directory + config.shownotesDir + config.postsDir + lastAlphabeticalFile.stdout);

      console.log(clc.red('Newly created post can now be found at:\n' + config.directory + config.shownotesDir + config.postsDir + lastAlphabeticalFile.stdout));
    });

  });

  sh.run('open ' + config.directory + config.shownotesDir + config.readme);
  sh.run('open ' + config.directory + config.shownotesDir + config.postsDir);
  sh.run('open ' + config.app.tower);

}
else {
  console.log('Missing arguments :(');
  program.help();
}

